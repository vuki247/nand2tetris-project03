/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // 0..2 bits of address select one of the RAM8 chips and 3..5 bits of address select the register in the selected RAM8 chip
    DMux8Way(in=load, sel=address[0..2],
      a=load0,
      b=load1,
      c=load2,
      d=load3,
      e=load4,
      f=load5,
      g=load6,
      h=load7
    );
    
    RAM8(in=in, load=load0, address=address[3..5], out=r0);
    RAM8(in=in, load=load1, address=address[3..5], out=r1);
    RAM8(in=in, load=load2, address=address[3..5], out=r2);
    RAM8(in=in, load=load3, address=address[3..5], out=r3);
    RAM8(in=in, load=load4, address=address[3..5], out=r4);
    RAM8(in=in, load=load5, address=address[3..5], out=r5);
    RAM8(in=in, load=load6, address=address[3..5], out=r6);
    RAM8(in=in, load=load7, address=address[3..5], out=r7);
    
    Mux8Way16(
      a=r0,
      b=r1,
      c=r2,
      d=r3,
      e=r4,
      f=r5,
      g=r6,
      h=r7,
      sel=address[0..2],
      out=out);
}